var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.173,1,2.138]],["body/controllers/AppController.html",[0,1.742,1,3.174,2,1.334,3,0.315,4,0.273,5,0.273,6,3.117,7,0.549,8,1.497,9,4.807,10,4.807,11,1.881,12,0.029,13,1.016,14,3.714,15,1.497,16,1.907,17,4.851,18,3.714,19,0.526,20,0.658,21,2.91,22,3.117,23,0.315,24,0.016,25,1.833,26,2.196,27,1.615,28,3.714,29,3.714,30,0.021,31,0.021]],["title/modules/AppModule.html",[32,1.008,33,2.138]],["body/modules/AppModule.html",[1,3.034,2,1.425,3,0.235,4,0.204,5,0.204,12,0.029,19,0.658,20,0.491,21,3.003,22,2.326,23,0.235,24,0.012,30,0.017,31,0.017,32,1.431,33,4.177,34,1.162,35,1.162,36,1.368,37,1.368,38,1.162,39,2.289,40,1.368,41,2.326,42,2.326,43,2.326,44,3.297,45,3.297,46,2.533,47,3.297,48,3.297,49,1.959,50,1.368,51,1.368,52,2.771,53,2.597,54,2.771,55,2.771,56,2.771,57,2.771,58,2.771,59,2.771,60,2.326,61,2.326,62,2.326,63,2.771,64,2.771,65,2.771,66,2.771,67,2.771,68,2.771]],["title/injectables/AppService.html",[21,1.76,69,0.742]],["body/injectables/AppService.html",[3,0.336,4,0.291,5,0.291,7,0.586,8,1.56,9,4.925,10,4.925,12,0.029,13,1.059,15,1.56,16,1.953,19,0.43,20,0.702,21,2.723,23,0.336,24,0.017,27,1.683,30,0.022,31,0.022,69,1.147,70,1.66,71,3.323,72,3.959,73,3.959,74,3.959,75,3.323,76,3.959,77,2.904]],["title/controllers/AuthController.html",[0,1.173,78,2.138]],["body/controllers/AuthController.html",[0,0.739,2,0.739,3,0.174,4,0.151,5,0.347,7,0.304,8,0.982,11,1.695,12,0.03,13,0.916,15,1.349,16,0.685,19,0.584,20,0.365,23,0.174,24,0.009,25,1.016,26,1.217,27,1.455,30,0.014,31,0.014,78,2.081,79,1.728,80,1.347,81,2.058,82,2.647,83,3.262,84,2.669,85,3.18,86,2.669,87,2.058,88,3.887,89,2.058,90,2.058,91,2.058,92,2.058,93,1.986,94,1.981,95,1.16,96,1.833,97,4.193,98,2.158,99,1.728,100,2.585,101,3.18,102,2.058,103,3.092,104,2.058,105,2.058,106,2.058,107,2.058,108,1.728,109,2.585,110,3.18,111,2.058,112,1.51,113,1.51,114,3.18,115,1.728,116,2.058,117,2.093,118,1.728,119,1.728,120,1.728,121,1.217,122,2.058,123,2.058,124,1.728,125,1.728,126,3.18,127,2.058,128,2.058,129,3.18,130,2.058,131,3.18,132,2.058,133,1.347,134,2.058,135,2.058,136,2.058,137,2.058,138,2.058,139,2.058,140,3.18,141,2.669,142,2.058,143,2.058,144,2.058,145,2.058,146,2.058,147,2.058,148,1.728,149,0.863,150,2.058,151,2.058,152,2.058,153,2.058,154,2.058,155,2.058,156,2.058,157,2.058,158,2.058,159,2.058,160,2.058,161,2.058,162,1.016,163,2.058,164,2.058,165,2.058]],["title/injectables/AuthGuard.html",[69,0.742,121,1.931]],["body/injectables/AuthGuard.html",[3,0.466,4,0.246,5,0.246,7,0.495,8,1.396,12,0.029,13,0.948,15,1.396,19,0.556,20,0.593,23,0.283,24,0.015,27,1.506,30,0.02,31,0.02,69,1.027,70,1.402,93,2.055,94,1.897,95,0.821,96,1.897,121,3.031,166,2.807,167,5.128,168,4.525,169,4.525,170,5.494,171,3.345,172,3.345,173,4.525,174,4.21,175,3.345,176,5.128,177,4.525,178,3.345,179,2.807,180,3.345,181,2.188,182,2.188,183,3.345,184,3.345,185,2.453,186,2.188]],["title/modules/AuthModule.html",[32,1.008,44,1.931]],["body/modules/AuthModule.html",[2,1.5,3,0.252,4,0.219,5,0.219,12,0.029,19,0.649,20,0.528,23,0.252,24,0.013,30,0.018,31,0.018,32,1.489,34,1.248,35,1.248,36,1.47,37,1.47,38,1.248,39,2.381,40,1.47,44,3.642,46,2.593,49,2.061,50,1.47,51,1.47,53,2.733,78,3.156,117,3.075,118,2.499,174,2.184,181,1.948,187,2.499,188,2.499,189,2.977,190,3.375,191,2.977,192,2.977,193,2.184,194,2.977,195,2.977,196,2.184,197,1.76,198,1.76,199,2.733,200,2.977,201,2.977,202,2.977,203,2.977,204,2.977,205,2.499,206,2.977,207,2.184,208,2.184,209,2.977,210,2.499,211,2.499]],["title/injectables/AuthService.html",[69,0.742,117,1.76]],["body/injectables/AuthService.html",[3,0.133,4,0.116,5,0.116,7,0.233,8,0.793,12,0.03,13,0.93,15,1.278,19,0.508,20,0.279,23,0.133,24,0.007,27,1.378,30,0.011,31,0.011,69,0.583,70,0.659,82,2.467,83,3.933,84,2.155,86,2.155,93,2.017,94,2.049,95,1.09,96,1.862,98,1.854,99,2.155,100,2.221,103,2.709,108,2.155,109,2.221,117,1.383,119,1.32,120,1.32,162,2.412,174,1.883,185,3.036,186,2.709,196,1.154,197,0.93,198,0.93,199,1.029,207,1.154,208,1.154,210,1.32,211,1.32,212,1.32,213,2.568,214,2.568,215,2.568,216,1.68,217,1.154,218,1.706,219,4.686,220,1.573,221,1.883,222,2.568,223,1.573,224,1.32,225,2.568,226,2.392,227,1.573,228,4.14,229,1.573,230,1.573,231,2.568,232,1.573,233,2.155,234,1.154,235,1.154,236,1.573,237,1.573,238,1.32,239,2.155,240,3.198,241,4.686,242,2.568,243,2.221,244,2.568,245,3.254,246,1.573,247,1.573,248,1.573,249,1.573,250,1.573,251,1.573,252,2.568,253,1.573,254,2.755,255,2.755,256,2.129,257,1.32,258,2.155,259,2.155,260,2.568,261,1.573,262,1.573,263,2.568,264,1.573,265,1.573,266,1.573,267,1.573,268,1.573,269,1.573,270,1.154,271,1.573,272,1.573,273,1.573,274,2.568,275,1.32,276,2.458,277,3.474,278,0.847,279,2.568,280,1.573,281,1.573,282,1.573,283,1.573,284,1.32,285,1.154,286,1.32]],["title/classes/CreateSekolahDto.html",[24,0.014,287,1.76]],["body/classes/CreateSekolahDto.html",[3,0.281,4,0.244,5,0.244,7,0.491,11,2.123,12,0.029,13,1.147,16,2.044,19,0.36,23,0.281,24,0.02,30,0.02,31,0.02,95,1.344,96,2.474,149,1.887,243,3.019,287,2.424,288,1.507,289,4.804,290,2.434,291,5.107,292,5.107,293,5.107,294,3.777,295,3.318,296,3.318,297,3.318,298,3.318,299,2.785,300,3.318,301,3.301,302,2.945,303,4.596,304,3.384,305,1.787]],["title/injectables/JwtStrategy.html",[69,0.742,190,1.931]],["body/injectables/JwtStrategy.html",[3,0.288,4,0.25,5,0.25,7,0.503,8,1.412,12,0.029,13,0.958,15,1.049,19,0.6,20,0.602,23,0.288,24,0.015,27,1.131,30,0.02,31,0.02,69,1.038,70,1.425,82,2.348,93,1.544,94,1.917,95,0.834,96,1.425,98,1.678,181,2.224,182,2.224,190,2.704,197,2.009,198,2.009,199,2.993,205,2.852,208,2.493,216,3.383,224,2.852,243,2.009,306,2.852,307,4.574,308,3.399,309,4.574,310,3.399,311,3.399,312,3.399,313,2.852,314,3.399,315,3.399,316,3.399,317,3.399,318,3.399,319,3.399,320,3.399,321,3.399,322,3.399,323,3.399,324,3.399,325,3.399,326,3.399]],["title/controllers/LatihanController.html",[0,1.173,327,2.138]],["body/controllers/LatihanController.html",[0,1.334,2,1.334,3,0.315,4,0.273,5,0.273,7,0.549,8,1.497,11,1.881,12,0.029,13,1.016,15,1.497,16,1.615,19,0.526,20,0.658,23,0.315,24,0.016,25,1.833,26,2.196,27,1.615,30,0.021,31,0.021,80,2.43,327,3.174,328,3.117,329,3.117,330,4.807,331,5.728,332,3.714,333,4.851,334,3.714,335,2.91,336,3.117,337,3.714,338,3.714,339,3.714]],["title/modules/LatihanModule.html",[32,1.008,45,1.931]],["body/modules/LatihanModule.html",[2,1.783,3,0.326,4,0.283,5,0.283,12,0.029,19,0.596,20,0.682,23,0.326,24,0.017,30,0.022,31,0.022,32,1.696,34,1.614,35,1.614,36,1.9,37,1.9,38,1.614,39,2.713,40,1.9,45,3.639,49,2.451,50,1.9,51,1.9,327,3.597,335,3.315,336,3.231,340,3.231,341,3.231,342,3.85,343,3.85]],["title/injectables/LatihanService.html",[69,0.742,335,1.76]],["body/injectables/LatihanService.html",[3,0.354,4,0.307,5,0.307,7,0.618,8,1.614,12,0.029,13,0.875,15,1.289,16,1.39,19,0.453,20,0.74,23,0.354,24,0.018,27,1.39,30,0.023,31,0.023,69,1.187,70,1.75,256,3.421,329,3.504,330,5.021,335,2.816,344,3.504,345,4.176]],["title/modules/PrismaModule.html",[32,1.008,46,1.484]],["body/modules/PrismaModule.html",[3,0.323,4,0.28,5,0.28,12,0.028,19,0.536,20,0.676,23,0.323,24,0.017,30,0.022,31,0.022,32,1.689,34,1.599,35,1.599,36,1.883,37,1.883,38,1.599,39,2.701,40,2.701,46,2.838,49,2.437,50,1.883,51,1.883,218,2.97,346,3.202,347,3.202,348,3.202,349,3.815,350,3.815]],["title/injectables/PrismaService.html",[69,0.742,218,1.484]],["body/injectables/PrismaService.html",[3,0.339,4,0.294,5,0.294,7,0.591,8,1.57,12,0.029,13,0.837,15,1.234,19,0.552,20,0.708,23,0.339,24,0.018,30,0.022,31,0.022,69,1.154,70,1.675,82,2.541,162,1.973,182,3.328,218,2.31,351,3.354,352,5.594,353,6.216,354,3.997,355,3.997,356,3.354,357,3.997,358,3.997]],["title/classes/Sekolah.html",[24,0.014,359,1.931]],["body/classes/Sekolah.html",[3,0.413,4,0.359,5,0.359,12,0.027,23,0.413,24,0.021,30,0.025,31,0.025,288,2.216,359,3.398,360,4.094]],["title/controllers/SekolahController.html",[0,1.173,361,2.138]],["body/controllers/SekolahController.html",[0,0.833,2,0.833,3,0.197,4,0.171,5,0.171,7,0.343,8,1.075,11,1.932,12,0.029,13,1.044,15,1.538,16,1.902,19,0.505,20,0.411,23,0.197,24,0.01,25,1.145,26,1.371,27,1.659,30,0.015,31,0.015,80,1.518,82,2.8,93,2.112,94,1.949,95,1.142,96,1.949,98,2.46,112,2.555,113,3.068,162,2.46,276,3.425,287,2.819,359,1.371,361,2.279,362,1.947,363,2.555,364,3.903,365,2.924,366,2.924,367,2.924,368,1.947,369,2.32,370,2.32,371,1.947,372,3.484,373,2.32,374,1.947,375,3.484,376,2.32,377,1.947,378,3.302,379,3.484,380,2.32,381,1.947,382,1.947,383,1.947,384,2.253,385,1.947,386,1.518,387,2.555,388,1.518,389,2.32,390,2.32,391,2.32,392,2.32,393,2.32,394,2.32,395,2.32,396,2.32,397,2.32,398,2.32]],["title/modules/SekolahModule.html",[32,1.008,47,1.931]],["body/modules/SekolahModule.html",[2,1.703,3,0.304,4,0.264,5,0.264,12,0.029,19,0.613,20,0.636,23,0.304,24,0.016,30,0.021,31,0.021,32,1.639,34,1.504,35,1.504,36,1.771,37,1.771,38,1.504,39,2.622,40,1.771,46,2.742,47,3.695,49,2.34,50,1.771,51,1.771,53,3.103,193,2.631,361,3.475,384,3.252,385,3.011,399,3.011,400,3.587,401,3.011,402,3.587,403,3.587]],["title/injectables/SekolahService.html",[69,0.742,384,1.76]],["body/injectables/SekolahService.html",[3,0.153,4,0.133,5,0.133,7,0.267,8,0.886,12,0.03,13,0.991,15,1.371,19,0.442,20,0.32,23,0.153,24,0.008,25,0.892,27,1.478,30,0.013,31,0.013,69,0.652,70,0.757,82,2.665,93,2.017,94,1.862,95,1.09,96,1.862,98,2.192,103,3.244,162,2.192,185,3.257,186,2.906,216,1.182,217,1.325,218,1.849,221,2.105,226,2.855,233,1.516,234,1.325,235,1.325,240,2.906,254,3.257,255,2.985,256,2.906,257,1.516,258,3.416,259,2.409,276,3.468,284,2.998,285,2.62,286,2.998,287,2.547,359,3.278,363,2.105,364,3.416,365,2.409,366,2.409,367,2.409,368,2.409,371,2.409,374,2.409,377,2.409,378,3.042,384,1.546,386,1.182,387,2.105,388,1.182,404,1.516,405,1.806,406,1.806,407,1.806,408,1.806,409,1.806,410,1.806,411,3.573,412,1.806,413,1.806,414,1.806,415,2.871,416,1.806,417,3.573,418,1.806,419,1.806,420,3.573,421,1.806,422,1.806]],["title/interfaces/Task.html",[278,1.76,423,2.138]],["body/interfaces/Task.html",[3,0.3,4,0.26,5,0.26,7,0.524,12,0.029,16,2.002,23,0.398,30,0.021,31,0.021,77,2.598,95,1.296,149,1.971,226,2.843,240,2.318,278,2.843,423,2.318,424,3.542,425,2.598,426,4.016,427,4.016,428,4.016,429,2.598,430,2.598,431,4.43,432,2.973,433,4.43,434,2.973,435,2.973,436,2.973]],["title/controllers/TaskController.html",[0,1.173,437,2.138]],["body/controllers/TaskController.html",[0,0.815,2,0.815,3,0.192,4,0.167,5,0.167,7,0.336,8,1.058,11,1.914,12,0.029,13,1.034,15,1.524,19,0.536,20,0.402,23,0.192,24,0.01,25,1.12,26,1.342,27,1.643,30,0.015,31,0.015,80,1.485,82,2.789,93,2.089,94,1.928,95,0.841,96,1.928,98,2.437,112,4.069,113,2.513,115,1.905,121,1.342,141,4.144,162,2.437,278,1.222,381,1.905,382,1.905,383,1.905,386,1.485,388,1.485,427,3.397,437,2.242,438,1.905,439,2.876,440,2.876,441,3.86,442,2.876,443,2.876,444,2.27,445,2.719,446,2.27,447,2.27,448,1.905,449,2.27,450,2.27,451,2.27,452,2.27,453,1.905,454,2.27,455,2.27,456,1.905,457,2.719,458,2.27,459,2.27,460,2.27,461,2.27,462,2.224,463,1.905,464,2.876,465,2.27,466,2.27,467,2.27,468,2.27,469,2.27,470,2.27,471,4.599,472,2.27,473,2.27,474,2.27,475,2.27,476,2.27,477,2.27,478,2.27,479,2.27]],["title/modules/TaskModule.html",[32,1.008,48,1.931]],["body/modules/TaskModule.html",[2,1.703,3,0.304,4,0.264,5,0.264,12,0.029,19,0.613,20,0.636,23,0.304,24,0.016,30,0.021,31,0.021,32,1.639,34,1.504,35,1.504,36,1.771,37,1.771,38,1.504,39,2.622,40,1.771,46,2.742,48,3.695,49,2.34,50,1.771,51,1.771,53,3.103,193,2.631,437,3.475,462,3.252,463,3.011,480,3.011,481,3.587,482,3.011,483,3.587,484,3.587]],["title/injectables/TaskService.html",[69,0.742,462,1.76]],["body/injectables/TaskService.html",[3,0.16,4,0.139,5,0.139,7,0.28,8,0.919,12,0.03,13,1.011,15,1.402,19,0.493,20,0.335,23,0.16,24,0.008,25,0.934,27,1.512,30,0.013,31,0.013,69,0.676,70,0.793,82,2.692,93,2.063,94,2.022,95,1.115,96,1.904,97,3.09,98,2.242,103,3.789,162,2.242,216,1.238,217,1.387,218,1.897,221,2.184,226,2.898,234,1.387,235,1.387,239,1.588,240,2.972,254,3.331,255,2.184,256,1.238,275,1.588,276,2.733,277,2.499,285,1.387,386,1.238,388,1.238,427,3.156,439,2.499,440,2.499,441,3.505,442,2.499,443,2.499,445,2.469,448,2.499,453,2.499,456,2.499,457,2.469,462,1.604,464,2.499,485,1.588,486,1.892,487,2.978,488,1.892,489,1.892,490,1.892,491,1.892,492,1.892,493,1.892,494,1.588,495,1.892,496,2.978,497,1.892,498,2.184,499,3.682,500,1.892,501,1.892,502,2.978,503,1.892,504,1.892,505,2.978,506,1.892,507,3.682,508,2.978,509,1.892,510,2.978,511,1.892,512,1.892,513,1.892]],["title/classes/UpdateSekolahDto.html",[24,0.014,378,1.931]],["body/classes/UpdateSekolahDto.html",[3,0.38,4,0.33,5,0.33,12,0.028,19,0.593,23,0.38,24,0.02,30,0.024,31,0.024,182,2.936,287,2.417,288,2.038,290,3.291,363,3.291,378,3.232,387,3.291,514,3.766,515,4.488,516,3.766,517,3.766,518,4.488]],["title/coverage.html",[519,3.266]],["body/coverage.html",[0,1.884,1,1.717,5,0.193,6,2.202,12,0.029,21,1.413,24,0.025,30,0.017,31,0.017,38,1.1,69,1.314,71,2.202,78,1.717,79,2.202,95,0.644,100,1.551,109,1.551,117,1.413,121,1.551,166,2.202,186,1.717,190,1.551,197,1.551,198,1.551,212,2.202,218,1.192,278,1.413,287,1.413,289,2.202,290,2.799,306,2.202,327,1.717,328,2.202,335,1.413,344,2.202,351,2.202,359,1.551,360,2.202,361,1.717,362,2.202,378,1.551,384,1.413,404,2.202,423,1.717,425,2.799,429,1.924,437,1.717,438,2.202,445,1.551,457,1.551,462,1.413,485,2.202,514,2.202,519,1.924,520,2.624,521,2.624,522,2.624,523,6.538,524,5.473,525,3.816,526,4.497,527,2.202,528,2.202,529,4.937,530,2.202,531,3.816,532,5.245,533,3.816,534,2.202,535,2.624,536,3.816,537,2.202,538,2.799,539,2.202,540,2.624,541,2.624]],["title/classes/createTaskDto.html",[24,0.014,445,1.931]],["body/classes/createTaskDto.html",[3,0.318,4,0.275,5,0.275,7,0.554,11,1.892,12,0.029,13,1.137,16,1.913,19,0.407,23,0.318,24,0.021,30,0.021,31,0.021,95,1.332,149,2.045,226,2.628,288,1.702,299,4.095,302,3.55,304,3.208,305,2.018,426,3.55,428,3.55,445,2.885,498,3.979,537,4.824,538,2.748,542,3.145,543,3.145,544,3.145]],["title/dependencies.html",[35,1.647,545,2.292]],["body/dependencies.html",[12,0.03,20,0.682,24,0.022,30,0.022,31,0.022,35,1.614,60,3.231,61,3.231,124,3.231,125,3.231,133,2.519,179,3.231,181,2.519,196,2.824,199,2.519,238,3.231,305,2.074,313,4.168,356,3.231,494,3.231,516,3.231,517,3.231,546,5.497,547,3.85,548,3.85,549,3.85,550,3.85,551,3.85,552,3.85,553,3.85,554,3.85,555,3.85,556,3.85,557,3.85,558,3.85,559,3.85,560,3.85,561,3.85]],["title/miscellaneous/functions.html",[562,1.787,563,3.297]],["body/miscellaneous/functions.html",[7,0.73,12,0.025,30,0.025,31,0.025,38,2.574,534,4.143,562,3.23,563,4.143,564,4.936]],["title/index.html",[7,0.404,565,2.731,566,2.731]],["body/index.html",[4,0.243,12,0.029,30,0.02,31,0.02,62,2.774,75,4.278,519,2.424,567,3.305,568,3.305,569,4.489,570,3.305,571,3.305,572,3.305,573,3.305,574,3.305,575,3.305,576,2.774,577,3.305,578,3.305,579,3.305,580,3.305,581,6.031,582,3.305,583,3.305,584,3.305,585,5.896,586,3.305,587,3.305,588,4.489,589,3.305,590,3.305,591,3.305,592,3.305,593,4.489,594,4.489,595,3.305,596,3.305,597,3.305,598,4.489,599,4.489,600,3.305,601,3.305,602,3.305,603,3.305,604,3.305,605,2.774,606,3.305,607,3.305,608,3.305,609,3.305,610,3.305,611,3.305,612,3.305,613,3.305,614,3.305,615,2.774,616,3.305,617,3.305,618,3.305,619,3.305,620,3.305,621,3.305,622,2.774]],["title/classes/loginDto.html",[24,0.014,100,1.931]],["body/classes/loginDto.html",[3,0.319,4,0.277,5,0.277,7,0.557,11,1.897,12,0.029,13,1.025,16,1.916,19,0.531,23,0.319,24,0.022,30,0.022,31,0.022,95,1.201,100,2.893,133,2.463,149,2.051,243,3.215,270,3.988,288,1.71,301,3.589,302,3.558,304,2.893,305,2.027,527,3.159,623,3.764,624,3.764,625,3.159,626,3.764,627,4.564,628,3.159,629,3.159,630,3.159,631,3.159]],["title/modules.html",[34,1.867]],["body/modules.html",[12,0.024,30,0.024,31,0.024,33,2.845,34,1.823,44,2.571,45,2.571,46,1.975,47,2.571,48,2.571,605,5.328,632,6.349,633,6.349,634,6.349]],["title/overview.html",[635,3.738]],["body/overview.html",[2,1.04,12,0.029,21,2.559,30,0.018,31,0.018,32,0.894,33,4.155,34,1.214,35,1.214,36,1.429,37,1.429,38,1.214,39,1.429,40,1.429,41,2.43,42,2.43,43,2.43,44,3.572,45,3.222,46,2.744,47,3.438,48,3.438,49,2.021,50,1.429,51,1.429,70,1.214,117,2.559,187,2.43,188,2.43,190,2.809,218,2.642,288,1.315,335,2.559,340,2.43,341,2.43,346,2.43,347,2.43,348,2.43,384,2.559,399,2.43,401,2.43,423,1.894,430,2.123,462,2.559,480,2.43,482,2.43,635,2.43,636,2.895,637,2.895,638,2.895,639,2.895]],["title/properties.html",[149,1.647,545,2.292]],["body/properties.html",[12,0.029,30,0.025,31,0.025,149,2.033,576,4.071,615,4.071,622,4.071,640,4.851,641,4.851,642,4.851]],["title/classes/registerDto.html",[24,0.014,109,1.931]],["body/classes/registerDto.html",[3,0.298,4,0.258,5,0.258,7,0.519,11,2.038,12,0.029,13,1.101,16,1.997,19,0.507,23,0.298,24,0.021,30,0.021,31,0.021,94,2.203,95,1.29,109,2.764,133,2.298,149,1.96,243,3.107,270,3.855,288,1.595,301,3.429,302,3.667,304,3.313,305,1.892,528,2.948,625,2.948,627,4.703,628,2.948,629,2.948,630,2.948,631,2.948,643,3.512,644,3.512,645,3.512,646,3.512,647,3.512]],["title/classes/updateTaskDto.html",[24,0.014,457,1.931]],["body/classes/updateTaskDto.html",[3,0.318,4,0.275,5,0.275,7,0.554,11,1.892,12,0.029,13,1.137,16,1.913,19,0.407,23,0.318,24,0.021,30,0.021,31,0.021,95,1.332,149,2.045,226,2.628,288,1.702,294,4.095,303,4.554,304,3.208,305,2.018,426,3.55,428,3.55,457,2.885,498,3.979,538,2.748,539,4.824,542,3.145,543,3.145,544,3.145]],["title/miscellaneous/variables.html",[562,1.787,648,3.297]],["body/miscellaneous/variables.html",[7,0.559,12,0.029,30,0.022,31,0.022,77,2.773,95,1.205,148,3.173,197,2.901,198,2.235,207,2.773,278,2.037,425,2.773,426,3.566,427,3.566,428,3.566,429,3.599,430,2.773,431,4.573,432,3.173,433,4.573,434,3.173,435,3.173,436,3.173,530,4.119,562,2.474,648,3.173,649,3.781,650,3.781,651,4.908,652,4.908,653,3.781,654,3.781,655,3.781]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Sekolah.html":{},"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"injectables/SekolahService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSekolahDto.html":{},"coverage.html":{},"classes/createTaskDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginDto.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":641,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":430,"title":{},"body":{"interfaces/Task.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":507,"title":{},"body":{"injectables/TaskService.html":{}}}],["3",{"_index":435,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["3600",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":637,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":636,"title":{},"body":{"overview.html":{}}}],["7",{"_index":639,"title":{},"body":{"overview.html":{}}}],["7.1.10",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":638,"title":{},"body":{"overview.html":{}}}],["accesstoken",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["address",{"_index":291,"title":{},"body":{"classes/CreateSekolahDto.html":{}}}],["alltask",{"_index":496,"title":{},"body":{"injectables/TaskService.html":{}}}],["already",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":606,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@apiconsumes('multipart/form",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth('accesstoken')@useguards(authguard)@apiheader({name",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes('multipart/form",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiheader",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":627,"title":{},"body":{"classes/loginDto.html":{},"classes/registerDto.html":{}}}],["apiproperty()@isnotempty()@isemail",{"_index":623,"title":{},"body":{"classes/loginDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":645,"title":{},"body":{"classes/registerDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@isemail",{"_index":643,"title":{},"body":{"classes/registerDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":625,"title":{},"body":{"classes/loginDto.html":{},"classes/registerDto.html":{}}}],["apitags",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":583,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":575,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":21,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["asdfqwer",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["auth",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":78,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":121,"title":{"injectables/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["authguardpassport",{"_index":180,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":183,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":44,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":615,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["authorization'})@get('profile",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["authservice",{"_index":117,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["avatar",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["avatar(@req",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar(req",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["await",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/PrismaService.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["backers",{"_index":607,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["berhasil",{"_index":512,"title":{},"body":{"injectables/TaskService.html":{}}}],["binary",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["body",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SekolahController.html":{},"controllers/TaskController.html":{}}}],["bootstrap",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":634,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":632,"title":{},"body":{"modules.html":{}}}],["building",{"_index":570,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":167,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":169,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["cb",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["cb(null",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkpassword",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.email",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.id",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.name",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuser.password",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":24,"title":{"classes/CreateSekolahDto.html":{},"classes/Sekolah.html":{},"classes/UpdateSekolahDto.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Sekolah.html":{},"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSekolahDto.html":{},"coverage.html":{},"classes/createTaskDto.html":{},"dependencies.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["classes",{"_index":288,"title":{},"body":{"classes/CreateSekolahDto.html":{},"classes/Sekolah.html":{},"classes/UpdateSekolahDto.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"overview.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["cluster_appmodule",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":187,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_latihanmodule",{"_index":340,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_latihanmodule_providers",{"_index":341,"title":{},"body":{"modules/LatihanModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":346,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":348,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":347,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_sekolahmodule",{"_index":399,"title":{},"body":{"modules/SekolahModule.html":{},"overview.html":{}}}],["cluster_sekolahmodule_imports",{"_index":400,"title":{},"body":{"modules/SekolahModule.html":{}}}],["cluster_sekolahmodule_providers",{"_index":401,"title":{},"body":{"modules/SekolahModule.html":{},"overview.html":{}}}],["cluster_taskmodule",{"_index":480,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["cluster_taskmodule_imports",{"_index":481,"title":{},"body":{"modules/TaskModule.html":{}}}],["cluster_taskmodule_providers",{"_index":482,"title":{},"body":{"modules/TaskModule.html":{},"overview.html":{}}}],["compare",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{}}}],["constructor",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}}}],["constructor(prisma",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["context",{"_index":172,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SekolahController.html":{},"controllers/TaskController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SekolahController.html":{},"controllers/TaskController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('latihan",{"_index":337,"title":{},"body":{"controllers/LatihanController.html":{}}}],["controller('sekolah",{"_index":389,"title":{},"body":{"controllers/SekolahController.html":{}}}],["controller('task",{"_index":466,"title":{},"body":{"controllers/TaskController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["coverage",{"_index":519,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":363,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"classes/UpdateSekolahDto.html":{}}}],["create(@body",{"_index":390,"title":{},"body":{"controllers/SekolahController.html":{}}}],["create(createsekolahdto",{"_index":368,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{}}}],["created",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{}}}],["createdata",{"_index":505,"title":{},"body":{"injectables/TaskService.html":{}}}],["createsekolah",{"_index":411,"title":{},"body":{"injectables/SekolahService.html":{}}}],["createsekolahdto",{"_index":287,"title":{"classes/CreateSekolahDto.html":{}},"body":{"classes/CreateSekolahDto.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"classes/UpdateSekolahDto.html":{},"coverage.html":{}}}],["createtask",{"_index":439,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["createtask(@body",{"_index":472,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(body",{"_index":444,"title":{},"body":{"controllers/TaskController.html":{}}}],["createtask(data",{"_index":487,"title":{},"body":{"injectables/TaskService.html":{}}}],["createtaskdto",{"_index":445,"title":{"classes/createTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{},"classes/createTaskDto.html":{}}}],["createuser",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["data",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}}}],["data')@apibody({schema",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["data.email",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.id_user",{"_index":504,"title":{},"body":{"injectables/TaskService.html":{}}}],["data.password",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["declarations",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateSekolahDto.html":{},"controllers/LatihanController.html":{},"controllers/SekolahController.html":{},"controllers/TaskController.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["default",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["delete",{"_index":383,"title":{},"body":{"controllers/SekolahController.html":{},"controllers/TaskController.html":{}}}],["delete('/:task_id",{"_index":477,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete('/:task_id')@useguards(authguard)@usepipes(validationpipe",{"_index":449,"title":{},"body":{"controllers/TaskController.html":{}}}],["delete(':id",{"_index":375,"title":{},"body":{"controllers/SekolahController.html":{}}}],["deleted",{"_index":422,"title":{},"body":{"injectables/SekolahService.html":{}}}],["deletedata",{"_index":510,"title":{},"body":{"injectables/TaskService.html":{}}}],["deletesekolah",{"_index":420,"title":{},"body":{"injectables/SekolahService.html":{}}}],["deletetaskid",{"_index":440,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["deletetaskid(@param('task_id",{"_index":478,"title":{},"body":{"controllers/TaskController.html":{}}}],["deletetaskid(task_id",{"_index":448,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":576,"title":{},"body":{"index.html":{},"properties.html":{}}}],["destination",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["development",{"_index":584,"title":{},"body":{"index.html":{}}}],["dihapus",{"_index":513,"title":{},"body":{"injectables/TaskService.html":{}}}],["diskstorage",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["documentation",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":386,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["dto/login.dto",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/register.dto",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":388,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["e2e",{"_index":595,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":571,"title":{},"body":{"index.html":{}}}],["email",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{}}}],["err",{"_index":176,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["executioncontext",{"_index":170,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["exp",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expired",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":210,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Sekolah.html":{},"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"injectables/SekolahService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSekolahDto.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["exports",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["express",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["extends",{"_index":182,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateSekolahDto.html":{}}}],["extractjwt",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Sekolah.html":{},"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"injectables/SekolahService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSekolahDto.html":{},"coverage.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["file.filename",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["file.originalname",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["fileinterceptor",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["filename",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["findall",{"_index":364,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{}}}],["findone",{"_index":365,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{}}}],["findone(@param('id",{"_index":393,"title":{},"body":{"controllers/SekolahController.html":{}}}],["findone(id",{"_index":371,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{}}}],["format",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["found",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{}}}],["framework",{"_index":569,"title":{},"body":{"index.html":{}}}],["function",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":563,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generatejwt",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["get('/:task_id",{"_index":468,"title":{},"body":{"controllers/TaskController.html":{}}}],["get('/:task_id')@useguards(authguard",{"_index":454,"title":{},"body":{"controllers/TaskController.html":{}}}],["get(':id",{"_index":372,"title":{},"body":{"controllers/SekolahController.html":{}}}],["get('hellow2",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["get('profile",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('v1",{"_index":333,"title":{},"body":{"controllers/LatihanController.html":{}}}],["get()@useguards(authguard",{"_index":451,"title":{},"body":{"controllers/TaskController.html":{}}}],["getalltask",{"_index":441,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gethello2",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlatihan",{"_index":330,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["getlatihan2",{"_index":331,"title":{},"body":{"controllers/LatihanController.html":{}}}],["getprofile",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["getprofile(user_id",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettaskid",{"_index":442,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["gettaskid(@param('task_id",{"_index":469,"title":{},"body":{"controllers/TaskController.html":{}}}],["gettaskid(task_id",{"_index":453,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["getting",{"_index":565,"title":{"index.html":{}},"body":{}}],["grow",{"_index":602,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":168,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handlerequest(err",{"_index":173,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hash",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["hellow",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":612,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{}}}],["httpexception('bad",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{}}}],["httpexception('sekolah",{"_index":415,"title":{},"body":{"injectables/SekolahService.html":{}}}],["httpexception('user",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":619,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.bad_request",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{}}}],["httpstatus.created",{"_index":413,"title":{},"body":{"injectables/SekolahService.html":{}}}],["httpstatus.found",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{}}}],["httpstatus.ok",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}}}],["httpstatus.unauthorized",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}}}],["id_user",{"_index":498,"title":{},"body":{"injectables/TaskService.html":{},"classes/createTaskDto.html":{},"classes/updateTaskDto.html":{}}}],["identifier",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["if(checkuser",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(updateuser",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":357,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSekolahDto.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{}}}],["include",{"_index":500,"title":{},"body":{"injectables/TaskService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/createTaskDto.html":{},"miscellaneous/functions.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":355,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Sekolah.html":{},"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"injectables/SekolahService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSekolahDto.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["inject",{"_index":493,"title":{},"body":{"injectables/TaskService.html":{}}}],["inject(request",{"_index":495,"title":{},"body":{"injectables/TaskService.html":{}}}],["injectable",{"_index":69,"title":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{},"coverage.html":{}}}],["injectables",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{},"overview.html":{}}}],["installation",{"_index":580,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":582,"title":{},"body":{"index.html":{}}}],["interface",{"_index":423,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":424,"title":{},"body":{"interfaces/Task.html":{}}}],["isemail",{"_index":301,"title":{},"body":{"classes/CreateSekolahDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{}}}],["isnotempty",{"_index":302,"title":{},"body":{"classes/CreateSekolahDto.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{}}}],["isoptional",{"_index":303,"title":{},"body":{"classes/CreateSekolahDto.html":{},"classes/updateTaskDto.html":{}}}],["isoptional()@isstring",{"_index":294,"title":{},"body":{"classes/CreateSekolahDto.html":{},"classes/updateTaskDto.html":{}}}],["isoptional()@isstring()@isemail",{"_index":296,"title":{},"body":{"classes/CreateSekolahDto.html":{}}}],["isstring",{"_index":304,"title":{},"body":{"classes/CreateSekolahDto.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["isstring()@isnotempty",{"_index":299,"title":{},"body":{"classes/CreateSekolahDto.html":{},"classes/createTaskDto.html":{}}}],["join",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["jwt",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt.ts",{"_index":530,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":211,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":208,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":190,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":616,"title":{},"body":{"index.html":{}}}],["keluarga",{"_index":433,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["latihan",{"_index":329,"title":{},"body":{"controllers/LatihanController.html":{},"injectables/LatihanService.html":{}}}],["latihan.controller",{"_index":343,"title":{},"body":{"modules/LatihanModule.html":{}}}],["latihan.service",{"_index":336,"title":{},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{}}}],["latihan/latihan.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["latihan2",{"_index":339,"title":{},"body":{"controllers/LatihanController.html":{}}}],["latihancontroller",{"_index":327,"title":{"controllers/LatihanController.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"coverage.html":{}}}],["latihanmodule",{"_index":45,"title":{"modules/LatihanModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LatihanModule.html":{},"modules.html":{},"overview.html":{}}}],["latihanservice",{"_index":335,"title":{"injectables/LatihanService.html":{}},"body":{"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["license",{"_index":622,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":599,"title":{},"body":{"index.html":{}}}],["login",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":100,"title":{"classes/loginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{},"classes/loginDto.html":{}}}],["makan",{"_index":431,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["malam",{"_index":432,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Sekolah.html":{},"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"injectables/SekolahService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSekolahDto.html":{},"coverage.html":{},"classes/createTaskDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginDto.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":628,"title":{},"body":{"classes/loginDto.html":{},"classes/registerDto.html":{}}}],["maxlength(20",{"_index":631,"title":{},"body":{"classes/loginDto.html":{},"classes/registerDto.html":{}}}],["message",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LatihanService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}}}],["metadata",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["minlength",{"_index":629,"title":{},"body":{"classes/loginDto.html":{},"classes/registerDto.html":{}}}],["minlength(6",{"_index":630,"title":{},"body":{"classes/loginDto.html":{},"classes/registerDto.html":{}}}],["miscellaneous",{"_index":562,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":598,"title":{},"body":{"index.html":{}}}],["mode",{"_index":588,"title":{},"body":{"index.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":611,"title":{},"body":{"index.html":{}}}],["multer",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["myśliwiec",{"_index":617,"title":{},"body":{"index.html":{}}}],["name",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"classes/registerDto.html":{}}}],["nest",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["nestframework",{"_index":621,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":494,"title":{},"body":{"injectables/TaskService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":516,"title":{},"body":{"classes/UpdateSekolahDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":181,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{}}}],["new",{"_index":186,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SekolahService.html":{},"coverage.html":{}}}],["node.js",{"_index":568,"title":{},"body":{"index.html":{}}}],["npm",{"_index":581,"title":{},"body":{"index.html":{}}}],["number",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{},"interfaces/Task.html":{},"injectables/TaskService.html":{},"classes/createTaskDto.html":{},"classes/updateTaskDto.html":{}}}],["object",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":178,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["onmoduleinit",{"_index":353,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":600,"title":{},"body":{"index.html":{}}}],["optional",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["overview",{"_index":635,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":545,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pagi",{"_index":434,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":382,"title":{},"body":{"controllers/SekolahController.html":{},"controllers/TaskController.html":{}}}],["parameters",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["partialtype",{"_index":515,"title":{},"body":{"classes/UpdateSekolahDto.html":{}}}],["partialtype(createsekolahdto",{"_index":518,"title":{},"body":{"classes/UpdateSekolahDto.html":{}}}],["passport",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{}}}],["patch",{"_index":381,"title":{},"body":{"controllers/SekolahController.html":{},"controllers/TaskController.html":{}}}],["patch('/:task_id",{"_index":474,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch('/:task_id')@useguards(authguard)@usepipes(validationpipe",{"_index":458,"title":{},"body":{"controllers/TaskController.html":{}}}],["patch(':id",{"_index":379,"title":{},"body":{"controllers/SekolahController.html":{}}}],["path",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.name",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["phone",{"_index":292,"title":{},"body":{"classes/CreateSekolahDto.html":{}}}],["please",{"_index":609,"title":{},"body":{"index.html":{}}}],["post",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/SekolahController.html":{},"controllers/TaskController.html":{}}}],["post('avatar",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@useguards(authguard)@usepipes(validationpipe",{"_index":446,"title":{},"body":{"controllers/TaskController.html":{}}}],["prefix",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SekolahController.html":{},"controllers/TaskController.html":{}}}],["prisma",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}}}],["prisma.service",{"_index":350,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":356,"title":{},"body":{"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":352,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":46,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":218,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["production",{"_index":590,"title":{},"body":{"index.html":{}}}],["profile",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@req",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":567,"title":{},"body":{"index.html":{}}}],["project",{"_index":601,"title":{},"body":{"index.html":{}}}],["properties",{"_index":149,"title":{"properties.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateSekolahDto.html":{},"interfaces/Task.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"properties.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["property",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["public",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["public/uploads/images",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["read",{"_index":610,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/LatihanController.html":{},"controllers/SekolahController.html":{},"controllers/TaskController.html":{}}}],["reflect",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":109,"title":{"classes/registerDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{},"classes/registerDto.html":{}}}],["registered",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["remove",{"_index":366,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{}}}],["remove(@param('id",{"_index":397,"title":{},"body":{"controllers/SekolahController.html":{}}}],["remove(id",{"_index":374,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{}}}],["repository",{"_index":579,"title":{},"body":{"index.html":{}}}],["req",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/TaskService.html":{}}}],["request",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Sekolah.html":{},"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"injectables/SekolahService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSekolahDto.html":{},"coverage.html":{},"classes/createTaskDto.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/loginDto.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"injectables/PrismaService.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["rootpath",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":585,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":179,"title":{},"body":{"injectables/AuthGuard.html":{},"dependencies.html":{}}}],["scalable",{"_index":572,"title":{},"body":{"index.html":{}}}],["schema",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["school_name",{"_index":293,"title":{},"body":{"classes/CreateSekolahDto.html":{}}}],["secret",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sekolah",{"_index":359,"title":{"classes/Sekolah.html":{}},"body":{"classes/Sekolah.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"coverage.html":{}}}],["sekolah.controller",{"_index":403,"title":{},"body":{"modules/SekolahModule.html":{}}}],["sekolah.dto",{"_index":387,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"classes/UpdateSekolahDto.html":{}}}],["sekolah.dto.ts",{"_index":290,"title":{},"body":{"classes/CreateSekolahDto.html":{},"classes/UpdateSekolahDto.html":{},"coverage.html":{}}}],["sekolah.dto.ts:12",{"_index":297,"title":{},"body":{"classes/CreateSekolahDto.html":{}}}],["sekolah.dto.ts:16",{"_index":295,"title":{},"body":{"classes/CreateSekolahDto.html":{}}}],["sekolah.dto.ts:20",{"_index":298,"title":{},"body":{"classes/CreateSekolahDto.html":{}}}],["sekolah.dto.ts:7",{"_index":300,"title":{},"body":{"classes/CreateSekolahDto.html":{}}}],["sekolah.service",{"_index":385,"title":{},"body":{"controllers/SekolahController.html":{},"modules/SekolahModule.html":{}}}],["sekolah/sekolah.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["sekolahcontroller",{"_index":361,"title":{"controllers/SekolahController.html":{}},"body":{"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"coverage.html":{}}}],["sekolahmodule",{"_index":47,"title":{"modules/SekolahModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SekolahModule.html":{},"modules.html":{},"overview.html":{}}}],["sekolahservice",{"_index":384,"title":{"injectables/SekolahService.html":{}},"body":{"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"injectables/SekolahService.html":{},"coverage.html":{},"overview.html":{}}}],["select",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["server",{"_index":573,"title":{},"body":{"index.html":{}}}],["servestaticmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{}}}],["siang",{"_index":436,"title":{},"body":{"interfaces/Task.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":574,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":209,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/LatihanController.html":{},"modules/LatihanModule.html":{},"injectables/LatihanService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Sekolah.html":{},"controllers/SekolahController.html":{},"modules/SekolahModule.html":{},"injectables/SekolahService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"classes/UpdateSekolahDto.html":{},"classes/createTaskDto.html":{},"index.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["sponsors",{"_index":604,"title":{},"body":{"index.html":{}}}],["src/.../config",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../task.ts",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:14",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:9",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:9",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:31",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:58",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":465,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/auth/auth.guard.ts",{"_index":166,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:11",{"_index":175,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:7",{"_index":171,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:102",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:16",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:39",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:79",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":527,"title":{},"body":{"coverage.html":{},"classes/loginDto.html":{}}}],["src/auth/dto/login.dto.ts:14",{"_index":624,"title":{},"body":{"classes/loginDto.html":{}}}],["src/auth/dto/login.dto.ts:21",{"_index":626,"title":{},"body":{"classes/loginDto.html":{}}}],["src/auth/dto/register.dto.ts",{"_index":528,"title":{},"body":{"coverage.html":{},"classes/registerDto.html":{}}}],["src/auth/dto/register.dto.ts:14",{"_index":646,"title":{},"body":{"classes/registerDto.html":{}}}],["src/auth/dto/register.dto.ts:20",{"_index":644,"title":{},"body":{"classes/registerDto.html":{}}}],["src/auth/dto/register.dto.ts:27",{"_index":647,"title":{},"body":{"classes/registerDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":306,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:17",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:8",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/config",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/latihan/latihan.controller.ts",{"_index":328,"title":{},"body":{"controllers/LatihanController.html":{},"coverage.html":{}}}],["src/latihan/latihan.controller.ts:14",{"_index":334,"title":{},"body":{"controllers/LatihanController.html":{}}}],["src/latihan/latihan.controller.ts:9",{"_index":332,"title":{},"body":{"controllers/LatihanController.html":{}}}],["src/latihan/latihan.module.ts",{"_index":342,"title":{},"body":{"modules/LatihanModule.html":{}}}],["src/latihan/latihan.service.ts",{"_index":344,"title":{},"body":{"injectables/LatihanService.html":{},"coverage.html":{}}}],["src/latihan/latihan.service.ts:5",{"_index":345,"title":{},"body":{"injectables/LatihanService.html":{}}}],["src/main.ts",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":349,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":351,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":354,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/sekolah/dto/create",{"_index":289,"title":{},"body":{"classes/CreateSekolahDto.html":{},"coverage.html":{}}}],["src/sekolah/dto/update",{"_index":514,"title":{},"body":{"classes/UpdateSekolahDto.html":{},"coverage.html":{}}}],["src/sekolah/entities/sekolah.entity.ts",{"_index":360,"title":{},"body":{"classes/Sekolah.html":{},"coverage.html":{}}}],["src/sekolah/sekolah.controller.ts",{"_index":362,"title":{},"body":{"controllers/SekolahController.html":{},"coverage.html":{}}}],["src/sekolah/sekolah.controller.ts:11",{"_index":369,"title":{},"body":{"controllers/SekolahController.html":{}}}],["src/sekolah/sekolah.controller.ts:16",{"_index":370,"title":{},"body":{"controllers/SekolahController.html":{}}}],["src/sekolah/sekolah.controller.ts:21",{"_index":373,"title":{},"body":{"controllers/SekolahController.html":{}}}],["src/sekolah/sekolah.controller.ts:26",{"_index":380,"title":{},"body":{"controllers/SekolahController.html":{}}}],["src/sekolah/sekolah.controller.ts:31",{"_index":376,"title":{},"body":{"controllers/SekolahController.html":{}}}],["src/sekolah/sekolah.module.ts",{"_index":402,"title":{},"body":{"modules/SekolahModule.html":{}}}],["src/sekolah/sekolah.service.ts",{"_index":404,"title":{},"body":{"injectables/SekolahService.html":{},"coverage.html":{}}}],["src/sekolah/sekolah.service.ts:10",{"_index":406,"title":{},"body":{"injectables/SekolahService.html":{}}}],["src/sekolah/sekolah.service.ts:25",{"_index":407,"title":{},"body":{"injectables/SekolahService.html":{}}}],["src/sekolah/sekolah.service.ts:38",{"_index":408,"title":{},"body":{"injectables/SekolahService.html":{}}}],["src/sekolah/sekolah.service.ts:55",{"_index":410,"title":{},"body":{"injectables/SekolahService.html":{}}}],["src/sekolah/sekolah.service.ts:7",{"_index":405,"title":{},"body":{"injectables/SekolahService.html":{}}}],["src/sekolah/sekolah.service.ts:73",{"_index":409,"title":{},"body":{"injectables/SekolahService.html":{}}}],["src/task/data/task.ts",{"_index":425,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/task/dto/create",{"_index":537,"title":{},"body":{"coverage.html":{},"classes/createTaskDto.html":{}}}],["src/task/dto/update",{"_index":539,"title":{},"body":{"coverage.html":{},"classes/updateTaskDto.html":{}}}],["src/task/task.controller.ts",{"_index":438,"title":{},"body":{"controllers/TaskController.html":{},"coverage.html":{}}}],["src/task/task.controller.ts:24",{"_index":452,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:30",{"_index":455,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:38",{"_index":447,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:45",{"_index":459,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.controller.ts:52",{"_index":450,"title":{},"body":{"controllers/TaskController.html":{}}}],["src/task/task.module.ts",{"_index":483,"title":{},"body":{"modules/TaskModule.html":{}}}],["src/task/task.service.ts",{"_index":485,"title":{},"body":{"injectables/TaskService.html":{},"coverage.html":{}}}],["src/task/task.service.ts:11",{"_index":490,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:32",{"_index":491,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:46",{"_index":488,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:57",{"_index":492,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:70",{"_index":489,"title":{},"body":{"injectables/TaskService.html":{}}}],["src/task/task.service.ts:8",{"_index":486,"title":{},"body":{"injectables/TaskService.html":{}}}],["start",{"_index":586,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":589,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":591,"title":{},"body":{"index.html":{}}}],["started",{"_index":566,"title":{"index.html":{}},"body":{}}],["starter",{"_index":578,"title":{},"body":{"index.html":{}}}],["statements",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["statuscode",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SekolahService.html":{},"injectables/TaskService.html":{}}}],["stay",{"_index":613,"title":{},"body":{"index.html":{}}}],["storage",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["strategy",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/CreateSekolahDto.html":{},"controllers/LatihanController.html":{},"injectables/LatihanService.html":{},"controllers/SekolahController.html":{},"interfaces/Task.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["sub",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":184,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["support",{"_index":605,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":633,"title":{},"body":{"modules.html":{}}}],["table",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":278,"title":{"interfaces/Task.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.controller",{"_index":484,"title":{},"body":{"modules/TaskModule.html":{}}}],["task.dto",{"_index":464,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["task.dto.ts",{"_index":538,"title":{},"body":{"coverage.html":{},"classes/createTaskDto.html":{},"classes/updateTaskDto.html":{}}}],["task.dto.ts:13",{"_index":543,"title":{},"body":{"classes/createTaskDto.html":{},"classes/updateTaskDto.html":{}}}],["task.dto.ts:5",{"_index":542,"title":{},"body":{"classes/createTaskDto.html":{},"classes/updateTaskDto.html":{}}}],["task.dto.ts:9",{"_index":544,"title":{},"body":{"classes/createTaskDto.html":{},"classes/updateTaskDto.html":{}}}],["task.service",{"_index":463,"title":{},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{}}}],["task/task.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["task_description",{"_index":426,"title":{},"body":{"interfaces/Task.html":{},"classes/createTaskDto.html":{},"classes/updateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["task_id",{"_index":427,"title":{},"body":{"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"miscellaneous/variables.html":{}}}],["task_name",{"_index":428,"title":{},"body":{"interfaces/Task.html":{},"classes/createTaskDto.html":{},"classes/updateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["taskcontroller",{"_index":437,"title":{"controllers/TaskController.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"coverage.html":{}}}],["taskid",{"_index":502,"title":{},"body":{"injectables/TaskService.html":{}}}],["taskmodule",{"_index":48,"title":{"modules/TaskModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TaskModule.html":{},"modules.html":{},"overview.html":{}}}],["tasks",{"_index":429,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskservice",{"_index":462,"title":{"injectables/TaskService.html":{}},"body":{"controllers/TaskController.html":{},"modules/TaskModule.html":{},"injectables/TaskService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":594,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":597,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":596,"title":{},"body":{"index.html":{}}}],["tests",{"_index":593,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":603,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":358,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello2",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.getprofile(req.user.userid",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(data",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.uploadavatar(req.user.userid",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.latihanservice.getlatihan",{"_index":338,"title":{},"body":{"controllers/LatihanController.html":{}}}],["this.prisma.sekolah.create",{"_index":412,"title":{},"body":{"injectables/SekolahService.html":{}}}],["this.prisma.sekolah.delete",{"_index":421,"title":{},"body":{"injectables/SekolahService.html":{}}}],["this.prisma.sekolah.findmany",{"_index":414,"title":{},"body":{"injectables/SekolahService.html":{}}}],["this.prisma.sekolah.findunique",{"_index":416,"title":{},"body":{"injectables/SekolahService.html":{}}}],["this.prisma.sekolah.update",{"_index":418,"title":{},"body":{"injectables/SekolahService.html":{}}}],["this.prisma.task.create",{"_index":506,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.delete",{"_index":511,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.findmany",{"_index":497,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.findunique",{"_index":503,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.task.update",{"_index":509,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.prisma.users.create",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findunique",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.req.user.userid",{"_index":499,"title":{},"body":{"injectables/TaskService.html":{}}}],["this.sekolahservice.create(createsekolahdto",{"_index":391,"title":{},"body":{"controllers/SekolahController.html":{}}}],["this.sekolahservice.findall",{"_index":392,"title":{},"body":{"controllers/SekolahController.html":{}}}],["this.sekolahservice.findone(+id",{"_index":394,"title":{},"body":{"controllers/SekolahController.html":{}}}],["this.sekolahservice.remove(+id",{"_index":398,"title":{},"body":{"controllers/SekolahController.html":{}}}],["this.sekolahservice.update(+id",{"_index":396,"title":{},"body":{"controllers/SekolahController.html":{}}}],["this.taskservice.createtask(body",{"_index":473,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.deletetaskid(+task_id",{"_index":479,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.getalltask",{"_index":467,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.gettaskid(+task_id",{"_index":470,"title":{},"body":{"controllers/TaskController.html":{}}}],["this.taskservice.updatetaskid(+task_id",{"_index":476,"title":{},"body":{"controllers/TaskController.html":{}}}],["throw",{"_index":185,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SekolahService.html":{}}}],["touch",{"_index":614,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/TaskService.html":{}}}],["twitter",{"_index":620,"title":{},"body":{"index.html":{}}}],["type",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateSekolahDto.html":{},"injectables/JwtStrategy.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"interfaces/Task.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{},"classes/createTaskDto.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":517,"title":{},"body":{"classes/UpdateSekolahDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":577,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":177,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["undefined})@useinterceptors(undefined)@post('avatar",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["unit",{"_index":592,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["unlicensed",{"_index":642,"title":{},"body":{"properties.html":{}}}],["update",{"_index":367,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{}}}],["update(@param('id",{"_index":395,"title":{},"body":{"controllers/SekolahController.html":{}}}],["update(id",{"_index":377,"title":{},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{}}}],["updated",{"_index":419,"title":{},"body":{"injectables/SekolahService.html":{}}}],["updatedata",{"_index":508,"title":{},"body":{"injectables/TaskService.html":{}}}],["updatesekolah",{"_index":417,"title":{},"body":{"injectables/SekolahService.html":{}}}],["updatesekolahdto",{"_index":378,"title":{"classes/UpdateSekolahDto.html":{}},"body":{"controllers/SekolahController.html":{},"injectables/SekolahService.html":{},"classes/UpdateSekolahDto.html":{},"coverage.html":{}}}],["updatetaskdto",{"_index":457,"title":{"classes/updateTaskDto.html":{}},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{},"coverage.html":{},"classes/updateTaskDto.html":{}}}],["updatetaskid",{"_index":443,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updatetaskid(@param('task_id",{"_index":475,"title":{},"body":{"controllers/TaskController.html":{}}}],["updatetaskid(task_id",{"_index":456,"title":{},"body":{"controllers/TaskController.html":{},"injectables/TaskService.html":{}}}],["updateuser",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadavatar(user_id",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploaded",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["uploadedfile",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["uploads/images",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useguards(authguard",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TaskController.html":{}}}],["useinterceptors",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors(fileinterceptor('avatar",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes",{"_index":460,"title":{},"body":{"controllers/TaskController.html":{}}}],["usepipes(validationpipe",{"_index":471,"title":{},"body":{"controllers/TaskController.html":{}}}],["user",{"_index":174,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["user_id",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["users",{"_index":501,"title":{},"body":{"injectables/TaskService.html":{}}}],["validate",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationpipe",{"_index":461,"title":{},"body":{"controllers/TaskController.html":{}}}],["validator",{"_index":305,"title":{},"body":{"classes/CreateSekolahDto.html":{},"classes/createTaskDto.html":{},"dependencies.html":{},"classes/loginDto.html":{},"classes/registerDto.html":{},"classes/updateTaskDto.html":{}}}],["value",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":648,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":640,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":587,"title":{},"body":{"index.html":{}}}],["website",{"_index":618,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["you'd",{"_index":608,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LatihanModule.html":{},"modules/PrismaModule.html":{},"modules/SekolahModule.html":{},"modules/TaskModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                getHello2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello2\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello2()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hellow2')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @Get('hellow2')\n  getHello2(): string {\n    return this.appService.getHello2();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nSekolahModule\n\nSekolahModule\n\nAppModule -->\n\nSekolahModule->AppModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LatihanModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            SekolahModule\n                        \n                        \n                            TaskModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { LatihanModule } from './latihan/latihan.module';\nimport { TaskModule } from './task/task.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { SekolahModule } from './sekolah/sekolah.module';\n\n@Module({\n  imports: [LatihanModule, TaskModule, PrismaModule, AuthModule,  ServeStaticModule.forRoot({\n    rootPath: join(__dirname, '..', 'public'),\n  }), SekolahModule,],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getHello2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello2\n                        \n                    \n                \n            \n            \n                \ngetHello2()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello Nest!';\n  }\n\n  getHello2(): string {\n    return 'Hellow 2';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                avatar\n                            \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Async\n                        avatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    avatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@ApiConsumes('multipart/form-data')@ApiBody({schema: undefined})@UseInterceptors(undefined)@Post('avatar')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: loginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                loginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth('accessToken')@UseGuards(AuthGuard)@ApiHeader({name: 'Authorization'})@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: registerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                registerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Req, UploadedFile, UseGuards, UseInterceptors } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { registerDto } from './dto/register.dto';\nimport { loginDto } from './dto/login.dto';\nimport { AuthGuard } from './auth.guard';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiHeader, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) { }\n\n  @Post('register')\n  async register(@Body() data: registerDto) {\n    return this.authService.register(data);\n  }\n\n  @Post('login')\n  async login(@Body() data: loginDto) {\n    return this.authService.login(data);\n  }\n\n  @ApiBearerAuth('accessToken')\n  @UseGuards(AuthGuard)\n  @ApiHeader({\n    name: 'Authorization',\n  })\n  @Get('profile')\n  async profile(@Req() req) {\n    return this.authService.getProfile(req.user.userId);\n  }\n\n  @ApiBearerAuth('accessToken')\n  @UseGuards(AuthGuard)\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        avatar: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n    },\n  })\n  @UseInterceptors(FileInterceptor('avatar', {\n    storage: diskStorage({\n      destination: 'public/uploads/images',\n      filename: (req, file, cb) => {\n        cb(null, file.originalname);\n      }\n    })\n  }))\n  @Post('avatar')\n  async avatar(@Req() req, @UploadedFile() file: Express.Multer.File) {\n    return await this.authService.uploadAvatar(req.user.userId, '/uploads/images/' + file.filename);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.guard.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CanActivate, ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { AuthGuard as AuthGuardPassport} from '@nestjs/passport';\n\n@Injectable()\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  canActivate(context: ExecutionContext) {\n      return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n      if (err || !user) {\n        throw err || new UnauthorizedException();\n      }\n      return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/config-jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false,\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: { expiresIn: jwt_config.expired },\n    }),\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateJwt\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        generateJwt\n                        \n                    \n                \n            \n            \n                \ngenerateJwt(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(user_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: loginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                loginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: registerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                registerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(user_id: number, avatar)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    avatar\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { registerDto } from './dto/register.dto';\nimport { compare, hash } from 'bcrypt';\nimport { loginDto } from './dto/login.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/config-jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private prisma: PrismaService,\n    private jwtService: JwtService,\n  ) {}\n\n  async register(data: registerDto) {\n    const checkUser = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n\n    if (checkUser) {\n      throw new HttpException('User already registered', HttpStatus.FOUND);\n    }\n\n    data.password = await hash(data.password, 12);\n\n    const createUser = await this.prisma.users.create({ data });\n\n    if (createUser) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'User Created',\n      };\n    }\n  }\n\n  async login(data: loginDto) {\n    const checkUser = await this.prisma.users.findFirst({\n      where: {\n        email: data.email,\n      },\n    });\n\n    if (!checkUser) {\n      throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n    }\n\n    const checkPassword = await compare(data.password, checkUser.password);\n\n    if (checkPassword) {\n      const accessToken = this.generateJwt({\n        sub: checkUser.id,\n        name: checkUser.name,\n        email: checkUser.email,\n      });\n\n      return {\n        statusCode: HttpStatus.OK,\n        accessToken,\n        message: 'Welcome',\n      };\n    } else {\n      throw new HttpException(\n        'User or password not match',\n        HttpStatus.UNAUTHORIZED,\n      );\n    }\n  }\n\n  generateJwt(payload: any) {\n    return this.jwtService.sign(payload, {\n      secret: jwt_config.secret,\n      expiresIn: jwt_config.expired,\n    });\n  }\n\n  async getProfile(user_id: number){\n    const checkUser = await this.prisma.users.findUnique({\n      select:{\n        id: true,\n        name: true, \n        email: true, \n        avatar: true,\n        task: true\n      },\n      where: {\n        id: user_id\n      }\n    });\n    if(checkUser){\n      return {\n        statusCode: HttpStatus.OK,\n        data: checkUser\n      }\n    }\n\n    throw new HttpException('User not found', HttpStatus.NOT_FOUND);\n  }\n\n  async uploadAvatar(user_id: number, avatar){\n    const checkUser = await this.prisma.users.findUnique({\n      where: {\n        id: user_id\n      }\n    });\n    if(checkUser){\n      const updateUser = await this.prisma.users.update({\n        data: {\n          avatar: avatar\n        },\n        where: {\n          id: user_id\n        }\n      });\n      if(updateUser){\n        return {\n          statusCode: HttpStatus.OK,\n          message: \"Avatar uploaded\"\n        }\n      }\n    }\n    throw new HttpException('Bad request', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSekolahDto.html":{"url":"classes/CreateSekolahDto.html","title":"class - CreateSekolahDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSekolahDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sekolah/dto/create-sekolah.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                            \n                                    \n                                    \n                                school_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sekolah/dto/create-sekolah.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sekolah/dto/create-sekolah.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sekolah/dto/create-sekolah.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        school_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/sekolah/dto/create-sekolah.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsString } from \"class-validator\";\n\nexport class CreateSekolahDto {\n\n    @IsString()\n    @IsNotEmpty()\n    school_name: string\n\n    @IsOptional()\n    @IsString()\n    @IsEmail()\n    email?: string\n\n    @IsOptional()\n    @IsString()\n    address?: string\n\n    @IsOptional()\n    @IsString()\n    phone?: string\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwt_config } from 'src/config/config-jwt';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwt_config.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, name: payload.name, email: payload.email, exp: payload.exp};\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LatihanController.html":{"url":"controllers/LatihanController.html","title":"controller - LatihanController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LatihanController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                latihan\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getLatihan\n                            \n                            \n                                    \n                                getLatihan2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLatihan()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/latihan/latihan.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getLatihan2\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLatihan2()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('v1')\n                \n            \n\n            \n                \n                    Defined in src/latihan/latihan.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { LatihanService } from './latihan.service';\n\n@Controller('latihan')\nexport class LatihanController {\n  constructor(private readonly LatihanService: LatihanService) {}\n\n  @Get()\n  getLatihan() {\n    return this.LatihanService.getLatihan();\n  }\n\n  @Get('v1')\n  getLatihan2(): string {\n    return 'Latihan2';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LatihanModule.html":{"url":"modules/LatihanModule.html","title":"module - LatihanModule","body":"\n                   \n\n\n\n\n    Modules\n    LatihanModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\n\nLatihanService\n\nLatihanService\n\n\n\nLatihanModule\n\nLatihanModule\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/latihan/latihan.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LatihanService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LatihanController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LatihanController } from './latihan.controller';\nimport { LatihanService } from './latihan.service';\n\n@Module({\n  controllers: [LatihanController],\n  providers: [LatihanService],\n})\nexport class LatihanModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LatihanService.html":{"url":"injectables/LatihanService.html","title":"injectable - LatihanService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LatihanService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/latihan/latihan.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLatihan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLatihan\n                        \n                    \n                \n            \n            \n                \ngetLatihan()\n                \n            \n\n\n            \n                \n                    Defined in src/latihan/latihan.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class LatihanService {\n  getLatihan() {\n    return {\n      message: 'Latihan',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sekolah.html":{"url":"classes/Sekolah.html","title":"class - Sekolah","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sekolah\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sekolah/entities/sekolah.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Sekolah {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SekolahController.html":{"url":"controllers/SekolahController.html","title":"controller - SekolahController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SekolahController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sekolah/sekolah.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sekolah\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSekolahDto: CreateSekolahDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/sekolah/sekolah.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSekolahDto\n                                    \n                                                CreateSekolahDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/sekolah/sekolah.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/sekolah/sekolah.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/sekolah/sekolah.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateSekolahDto: UpdateSekolahDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/sekolah/sekolah.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSekolahDto\n                                    \n                                                UpdateSekolahDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SekolahService } from './sekolah.service';\nimport { CreateSekolahDto } from './dto/create-sekolah.dto';\nimport { UpdateSekolahDto } from './dto/update-sekolah.dto';\n\n@Controller('sekolah')\nexport class SekolahController {\n  constructor(private readonly sekolahService: SekolahService) {}\n\n  @Post()\n  async create(@Body() createSekolahDto: CreateSekolahDto) {\n    return await this.sekolahService.create(createSekolahDto);\n  }\n\n  @Get()\n  async findAll() {\n    return await this.sekolahService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.sekolahService.findOne(+id);\n  }\n\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updateSekolahDto: UpdateSekolahDto) {\n    return await this.sekolahService.update(+id, updateSekolahDto);\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.sekolahService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SekolahModule.html":{"url":"modules/SekolahModule.html","title":"module - SekolahModule","body":"\n                   \n\n\n\n\n    Modules\n    SekolahModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SekolahModule\n\n\n\ncluster_SekolahModule_imports\n\n\n\ncluster_SekolahModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSekolahModule\n\nSekolahModule\n\nSekolahModule -->\n\nPrismaModule->SekolahModule\n\n\n\n\n\nSekolahService\n\nSekolahService\n\nSekolahModule -->\n\nSekolahService->SekolahModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/sekolah/sekolah.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SekolahService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SekolahController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SekolahService } from './sekolah.service';\nimport { SekolahController } from './sekolah.controller';\nimport { PrismaModule } from \"src/prisma/prisma.module\";\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [SekolahController],\n  providers: [SekolahService],\n})\nexport class SekolahModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SekolahService.html":{"url":"injectables/SekolahService.html","title":"injectable - SekolahService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SekolahService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sekolah/sekolah.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/sekolah/sekolah.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSekolahDto: CreateSekolahDto)\n                \n            \n\n\n            \n                \n                    Defined in src/sekolah/sekolah.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSekolahDto\n                                    \n                                                CreateSekolahDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/sekolah/sekolah.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/sekolah/sekolah.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/sekolah/sekolah.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, updateSekolahDto: UpdateSekolahDto)\n                \n            \n\n\n            \n                \n                    Defined in src/sekolah/sekolah.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSekolahDto\n                                    \n                                                UpdateSekolahDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { CreateSekolahDto } from './dto/create-sekolah.dto';\nimport { UpdateSekolahDto } from './dto/update-sekolah.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class SekolahService {\n\n  constructor(private prisma: PrismaService) { }\n  async create(createSekolahDto: CreateSekolahDto) {\n    const createSekolah = await this.prisma.sekolah.create({\n      data: createSekolahDto\n    });\n    if (createSekolah) {\n      return {\n        statusCode: HttpStatus.CREATED,\n        message: 'Sekolah created',\n        data: createSekolah\n      }\n    }\n\n    throw new HttpException('Bad request', HttpStatus.BAD_REQUEST);\n  }\n\n  async findAll() {\n    const sekolah = await this.prisma.sekolah.findMany();\n    if (sekolah) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'Sekolah found',\n        data: sekolah\n      }\n    }\n\n    throw new HttpException('Sekolah not found', HttpStatus.NOT_FOUND);\n  }\n\n  async findOne(id: number) {\n    const sekolah = await this.prisma.sekolah.findUnique({\n      where: {\n        id: id\n      }\n    });\n    if (sekolah) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'Sekolah found',\n        data: sekolah\n      }\n    }\n\n    throw new HttpException('Sekolah not found', HttpStatus.NOT_FOUND);\n  }\n\n  async update(id: number, updateSekolahDto: UpdateSekolahDto) {\n    const updateSekolah = await this.prisma.sekolah.update({\n      where: {\n        id: id\n      },\n      data: updateSekolahDto\n    });\n    if (updateSekolah) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'Sekolah updated',\n        data: updateSekolah\n      }\n    }\n\n    throw new HttpException('Bad request', HttpStatus.BAD_REQUEST);\n  }\n\n  async remove(id: number) {\n    const deleteSekolah = await this.prisma.sekolah.delete({\n      where: {\n        id: id\n      }\n    });\n    if (deleteSekolah) {\n      return {\n        statusCode: HttpStatus.OK,\n        message: 'Sekolah deleted',\n        data: deleteSekolah\n      }\n    }\n\n    throw new HttpException('Bad request', HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/data/task.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            task_description\n                                        \n                                \n                                \n                                        \n                                            task_id\n                                        \n                                \n                                \n                                        \n                                            task_name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        task_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        task_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        task_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Task {\n  task_id: number;\n  task_name: string;\n  task_description: string;\n}\n\nexport const tasks: Task[] = [\n  {\n    task_id: 1,\n    task_name: 'Makan malam',\n    task_description: 'Keluarga',\n  },\n  {\n    task_id: 2,\n    task_name: 'Makan pagi',\n    task_description: 'Keluarga',\n  },\n  {\n    task_id: 3,\n    task_name: 'Makan siang',\n    task_description: 'Keluarga',\n  },\n];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TaskController.html":{"url":"controllers/TaskController.html","title":"controller - TaskController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TaskController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                task\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createTask\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteTaskId\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getAllTask\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getTaskId\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                updateTaskId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(body: createTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(AuthGuard)@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                createTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        deleteTaskId\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTaskId(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:task_id')@UseGuards(AuthGuard)@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTask()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getTaskId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskId(task_id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:task_id')@UseGuards(AuthGuard)\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        updateTaskId\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTaskId(task_id, body: updateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:task_id')@UseGuards(AuthGuard)@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/task/task.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                updateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { TaskService } from './task.service';\nimport { createTaskDto } from './dto/create-task.dto';\nimport { updateTaskDto } from './dto/update-task.dto';\nimport { AuthGuard } from 'src/auth/auth.guard';\n\n@Controller('task')\nexport class TaskController {\n  constructor(private readonly taskService: TaskService) {}\n\n  @Get()\n  @UseGuards(AuthGuard)\n  async getAllTask() {\n    return await this.taskService.getAllTask();\n  }\n\n  @Get('/:task_id')\n  @UseGuards(AuthGuard)\n  async getTaskId(@Param('task_id') task_id) {\n    return await this.taskService.getTaskId(+task_id);\n  }\n\n  // @UsePipes(ValidationPipe)\n  @Post()\n  @UseGuards(AuthGuard)\n  @UsePipes(ValidationPipe)\n  async createTask(@Body() body: createTaskDto) {\n    return await this.taskService.createTask(body);\n  }\n\n  @Patch('/:task_id')\n  @UseGuards(AuthGuard)\n  @UsePipes(ValidationPipe)\n  async updateTaskId(@Param('task_id') task_id, @Body() body: updateTaskDto) {\n    return await this.taskService.updateTaskId(+task_id, body);\n  }\n\n  @Delete('/:task_id')\n  @UseGuards(AuthGuard)\n  @UsePipes(ValidationPipe)\n  async deleteTaskId(@Param('task_id') task_id) {\n    return await this.taskService.deleteTaskId(+task_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TaskModule.html":{"url":"modules/TaskModule.html","title":"module - TaskModule","body":"\n                   \n\n\n\n\n    Modules\n    TaskModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_imports\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/task/task.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TaskService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TaskController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TaskController } from './task.controller';\nimport { TaskService } from './task.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [TaskController],\n  providers: [TaskService],\n})\nexport class TaskModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TaskService.html":{"url":"injectables/TaskService.html","title":"injectable - TaskService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TaskService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/task.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createTask\n                            \n                            \n                                    Async\n                                deleteTaskId\n                            \n                            \n                                    Async\n                                getAllTask\n                            \n                            \n                                    Async\n                                getTaskId\n                            \n                            \n                                    Async\n                                updateTaskId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/task/task.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    createTask(data: createTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                createTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteTaskId\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTaskId(task_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTask\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTask()\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTaskId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskId(task_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateTaskId\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTaskId(task_id: number, data: updateTaskDto)\n                \n            \n\n\n            \n                \n                    Defined in src/task/task.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                updateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Inject, Injectable } from '@nestjs/common';\nimport { createTaskDto } from './dto/create-task.dto';\nimport { updateTaskDto } from './dto/update-task.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { REQUEST } from '@nestjs/core';\n\n@Injectable()\nexport class TaskService {\n  constructor(private prisma: PrismaService, @Inject(REQUEST) private req: any) {}\n\n  async getAllTask() {\n    const allTask = await this.prisma.task.findMany({\n      where: {\n        id_user: this.req.user.userId\n      },\n      include: {\n        users: {\n          select:{\n            id: true,\n            name: true\n          }\n        }\n      }\n    });\n\n    return {\n      statusCode: HttpStatus.OK,\n      data: allTask\n    }\n  }\n\n  async getTaskId(task_id: number) {\n    const taskId = await this.prisma.task.findUnique({\n      where: {\n        id: task_id,\n        id_user: this.req.user.userId\n      },\n    });\n\n    return {\n      statusCode: HttpStatus.OK,\n      data: taskId\n    }\n  }\n\n  async createTask(data: createTaskDto) {\n    data.id_user = this.req.user.userId;\n    const createData = await this.prisma.task.create({\n      data: data,\n    });\n    return {\n      statusCode: 200,\n      data: createData,\n    };\n  }\n\n  async updateTaskId(task_id: number, data: updateTaskDto) {\n    const updateData = await this.prisma.task.update({\n      data: data,\n      where: {\n        id: task_id,\n      },\n    });\n    return {\n      statusCode: 200,\n      data: updateData,\n    };\n  }\n\n  async deleteTaskId(task_id: number) {\n    const deleteData = await this.prisma.task.delete({\n      where: {\n        id: task_id,\n      },\n    });\n    return {\n      statusCode: 200,\n      data: deleteData,\n      message: 'Berhasil dihapus.',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSekolahDto.html":{"url":"classes/UpdateSekolahDto.html","title":"class - UpdateSekolahDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSekolahDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sekolah/dto/update-sekolah.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSekolahDto } from './create-sekolah.dto';\n\nexport class UpdateSekolahDto extends PartialType(CreateSekolahDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            loginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/register.dto.ts\n            \n            class\n            registerDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/config-jwt.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/latihan/latihan.controller.ts\n            \n            controller\n            LatihanController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/latihan/latihan.service.ts\n            \n            injectable\n            LatihanService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/sekolah/dto/create-sekolah.dto.ts\n            \n            class\n            CreateSekolahDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/sekolah/dto/update-sekolah.dto.ts\n            \n            class\n            UpdateSekolahDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sekolah/entities/sekolah.entity.ts\n            \n            class\n            Sekolah\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/sekolah/sekolah.controller.ts\n            \n            controller\n            SekolahController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/sekolah/sekolah.service.ts\n            \n            injectable\n            SekolahService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/data/task.ts\n            \n            variable\n            tasks\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/task/dto/create-task.dto.ts\n            \n            class\n            createTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/dto/update-task.dto.ts\n            \n            class\n            updateTaskDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/task/task.controller.ts\n            \n            controller\n            TaskController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/task/task.service.ts\n            \n            injectable\n            TaskService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createTaskDto.html":{"url":"classes/createTaskDto.html","title":"class - createTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/create-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/create-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class createTaskDto {\n\n  id_user: number;\n  \n  @IsString()\n  @IsNotEmpty()\n  task_name: string;\n\n  @IsString()\n  @IsNotEmpty()\n  task_description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.1\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/serve-static : ^4.0.0\n        \n            @nestjs/swagger : ^7.1.10\n        \n            @prisma/client : ^5.2.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/loginDto.html":{"url":"classes/loginDto.html","title":"class - loginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  loginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class loginDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LatihanModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SekolahModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TaskModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LatihanModule\n\n\n\ncluster_LatihanModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_SekolahModule\n\n\n\ncluster_SekolahModule_providers\n\n\n\ncluster_TaskModule\n\n\n\ncluster_TaskModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLatihanModule\n\nLatihanModule\n\nAppModule -->\n\nLatihanModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nSekolahModule\n\nSekolahModule\n\nSekolahModule -->\n\nPrismaModule->SekolahModule\n\n\n\n\n\nTaskModule\n\nTaskModule\n\nTaskModule -->\n\nPrismaModule->TaskModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nSekolahModule->AppModule\n\n\n\nAppModule -->\n\nTaskModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLatihanService\n\nLatihanService\n\nLatihanModule -->\n\nLatihanService->LatihanModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nSekolahService\n\nSekolahService\n\nSekolahModule -->\n\nSekolahService->SekolahModule\n\n\n\n\n\nTaskService\n\nTaskService\n\nTaskModule -->\n\nTaskService->TaskModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/registerDto.html":{"url":"classes/registerDto.html","title":"class - registerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  registerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/register.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/register.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  MaxLength,\n  MinLength,\n  IsEmail,\n} from 'class-validator';\n\nexport class registerDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n  \n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  @MaxLength(20)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/updateTaskDto.html":{"url":"classes/updateTaskDto.html","title":"class - updateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  updateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/task/dto/update-task.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id_user\n                            \n                            \n                                    \n                                    \n                                task_description\n                            \n                            \n                                    \n                                    \n                                task_name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        task_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/task/dto/update-task.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\n\nexport class updateTaskDto {\n\n  id_user: number;\n\n  @IsOptional()\n  @IsString()\n  task_name: string;\n\n  @IsOptional()\n  @IsString()\n  task_description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../config-jwt.ts)\n                        \n                        \n                            tasks   (src/.../task.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/config-jwt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret: 'asdfqwer',\n  expired: 3600,\n}\n                    \n                \n\n\n        \n    \n\n    src/task/data/task.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    task_id: 1,\n    task_name: 'Makan malam',\n    task_description: 'Keluarga',\n  },\n  {\n    task_id: 2,\n    task_name: 'Makan pagi',\n    task_description: 'Keluarga',\n  },\n  {\n    task_id: 3,\n    task_name: 'Makan siang',\n    task_description: 'Keluarga',\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
